Public Function getLocalIPInfo() As String
    Const strComputer As String = "."   ' Computer name. Dot means local computer
    Dim objWMIService, IPConfigSet, IPConfig, IPAddress, i
    Dim strIPAddress As String

    ' Connect to the WMI service
    Set objWMIService = GetObject("winmgmts:" _
        & "{impersonationLevel=impersonate}!\\" & strComputer & "\root\cimv2")

    ' Get all TCP/IP-enabled network adapters
    Set IPConfigSet = objWMIService.ExecQuery _
        ("Select * from Win32_NetworkAdapterConfiguration Where IPEnabled=TRUE")

    ' Get all IP addresses associated with these adapters
    For Each IPConfig In IPConfigSet
        IPAddress = IPConfig.IPAddress
        If Not IsNull(IPAddress) Then
            strIPAddress = strIPAddress & Join(IPAddress, ", ")
        End If
    Next

    GetIPAddress = strIPAddress
End Function


Function getPublicIP() As String

    Dim HttpRequest As Object
    
    On Error Resume Next
    'Create the XMLHttpRequest object.
    Set HttpRequest = CreateObject("MSXML2.XMLHTTP")

    'Check if the object was created.
    If Err.Number <> 0 Then
        'Return error message.
        getPublicIP = "Could not create the XMLHttpRequest object!"
        'Release the object and exit.
        Set HttpRequest = Nothing
        Exit Function
    End If
    On Error GoTo 0
    
    'Create the request - no special parameters required.
    HttpRequest.Open "GET", "http://myip.dnsomatic.com", False
    
    'Send the request to the site.
    HttpRequest.Send
        
    'Return the result of the request (the IP string).
    getPublicIP = HttpRequest.ResponseText

End Function


Public Function Wget(sSourceUrl As String, sDestinationPath As String) As Boolean
      'VBA function version of Wget.
      'It takes a url (sSourceUrl) and downloads the URL to sDestinationPath.

        On Error GoTo Wget_Error

        With New WinHttpRequest
              'Open a request to our source
            .Open "GET", sSourceUrl

              'I need to set this to get it to go through the firewall
            .SetAutoLogonPolicy AutoLogonPolicy_Always
            '.SetProxy 2, "http://127.0.0.1:8888", "*.never"
            .SetRequestHeader "Accept", "*/*"

              'Set any options you may need http://msdn.microsoft.com/en-us/library/windows/desktop/aa384108(v=vs.85).aspx
              'Set a custom useragent, not needed, but could be useful if there are problems on the server
            .Option(WinHttpRequestOption_UserAgentString) = "Mozilla/4.0 (compatible; VBA Wget)"

              'Automatically follow any redirects
            .Option(WinHttpRequestOption_EnableRedirects) = "True"
            .Send

              'You could check .Status here to ensure you've received a proper repsonse
              'You will also need to decide what to do if sDestinationPath exists. Here it just overwrites it

              'Write the responseBody to a file
              Dim ado As New ADODB.Stream
            ado.Type = adTypeBinary
            ado.Open
            ado.Write .ResponseBody
                ado.SaveToFile sDestinationPath, adSaveCreateOverWrite
             ado.Close

         End With

    Wget = True    'download was successful
Wget_Exit:
        On Error Resume Next
        Set ado = Nothing
        Exit Function

Wget_Error:
        Wget = False    'An error occurred
            Select Case Err
          Case Else
            Debug.Print "Unhandled Error in Wget", Err.Number, Err.Description, Err.Source, Erl()
        End Select
        Resume Wget_Exit
        Resume
End Function

Private Sub dloadBth_Click()
    Dim url As String
    Dim lngCount As Long
    Dim folderPath As String
    
    
    ' Open the file dialog
    With Application.FileDialog(msoFileDialogFolderPicker)
        .AllowMultiSelect = False
        .Show
        folderPath = .SelectedItems(1)
    End With
    
    url = Left(Me.Online_Version.Value, Len(Me.Online_Version.Value) - 1)
    url = Right(url, Len(url) - 1)
    Call Wget(url, folderPath & "\output.dat")
    
End Sub



